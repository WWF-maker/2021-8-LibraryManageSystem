<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0
                        //EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bookManageSystem.Mapper.UserMapper">
    <select id="queryAllUsers" resultType="com.example.bookManageSystem.Bean.User">
        SELECT * FROM user ORDER BY userID
    </select>
    <select id="queryUserNum" resultType="int">
        SELECT COUNT(userID) FROM user;
    </select>
    <select id="queryUserByPassword" resultType="com.example.bookManageSystem.Bean.User">
        SELECT * FROM user where userName=#{userName} and password=#{password};
    </select>
    <select id="queryUserByUserName" resultType="com.example.bookManageSystem.Bean.User">
        SELECT * FROM user WHERE userName=#{userName};
    </select>
    <select id="queryUserByUserID" resultType="com.example.bookManageSystem.Bean.User">
        SELECT * FROM user WHERE userID=#{userID};
    </select>
    <select id="updatePasswordByUserName">
        UPDATE user SET password=#{newPassword} WHERE userName=#{userName};
    </select>
    <select id="updateEmailByUserName">
        UPDATE user SET email=#{newEmail} WHERE userName=#{userName};
    </select>
    <select id="updateTelByUserName">
        UPDATE user SET tel=#{newTel} WHERE userName=#{userName};
    </select>
    <select id="registerUser">
        INSERT INTO user (userID ,password,userName, tel, email)
        VALUES (#{userID},#{password},#{userName},#{tel},#{email});
    </select>
    <select id="insertUser">
        INSERT INTO user (userID ,password,userName, tel, email)
        VALUES (#{userID},'MTIzNDU2',#{userName},#{tel},#{email});
    </select>
    <select id="deleteUser">
        DELETE FROM user WHERE userID=#{userID};
    </select>
    <select id="alterUser">
        UPDATE user
        SET userName=#{userName},tel=#{tel},email=#{email}
        WHERE userID=#{userID};
    </select>
    <select id="queryOverDueFineByID" resultType="double">
        SELECT sum(fine)
        from
            (SELECT rental.overDueFine as fine
             from rental
             where rental.userID =#{userID})as fines
    </select>
    <select id="queryRentalNum" resultType="int">
        SELECT COUNT(rental.bookID)
        from rental
        where rental.userID=#{userID} and rental.returnDate IS NULL;
    </select>
    <select id="getCurrentDate" resultType="String">
        SELECT CURRENT_DATE;
    </select>
    <select id="queryUserBreachNum" resultType="int">
        SELECT COUNT(*)
        FROM rental
        WHERE ((CURRENT_DATE>dueDate AND returnDate IS NULL)OR(returnDate>rental.dueDate)) AND userID=#{userID};
    </select>
    <select id="queryUserRentalNum" resultType="int">
        SELECT COUNT(*)
        FROM rental
        WHERE userID=#{userID};
    </select>
    <select id="queryUserBreach" resultType="com.example.bookManageSystem.Bean.Rental">
        SELECT *
        FROM rental
        WHERE ((CURRENT_DATE>dueDate AND returnDate IS NULL)OR(returnDate>rental.dueDate)) AND userID=#{userID};
    </select>
    <select id="queryHaveOverDueFineRentalByUserID" resultType="com.example.bookManageSystem.Bean.Rental">
        SELECT *
        FROM rental
        WHERE userID=#{userID} AND returnDate IS NULL AND CURRENT_DATE>dueDate;
    </select>
    <select id="selectAllUserFinePaidRentalByTime" resultType="com.example.bookManageSystem.Bean.Book">
        SELECT *
        FROM rental
        WHERE returnDate IS NOT NULL AND returnDate>=#{startDate} AND #{endDate}>=returnDate;
    </select>
    <select id="selectUserFinePaidRentalByTimeAndUserID" resultType="com.example.bookManageSystem.Bean.Book">
        SELECT *
        FROM rental
        WHERE userID=#{userID} AND returnDate IS NOT NULL AND returnDate>=#{startDate} AND #{endDate}>=returnDate;
    </select>
</mapper>